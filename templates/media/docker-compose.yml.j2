version: '3.5'

services:
  vpn:
    container_name: vpn
    image: sicruse/nordvpn-client
    restart: unless-stopped
    networks:
      - media
    ports:
      - '6789:6789' ## For nzbget service
    cap_add:
      - net_admin
    environment:
      - TZ=America/New_York
      - VPN_USER={{ nord_vpn_user }}
      - VPN_PASS={{ nord_vpn_password }}
      - COUNTRY="United States"
      - CATEGORY="Standard VPN servers"
      - PROTOCOL=openvpn_udp
    devices:
      - /dev/net/tun
    stdin_open: true
    tty: true

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    restart: always
    network_mode: service:vpn # run on the vpn network
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
    volumes:
      # - {{ nas_path }}/config/nzbget:/config
      # - {{ nas_path }}/downloads:/downloads
      - type: volume
        source: config_nzbget
        target: /config
        volume:
          nocopy: true
      - type: volume
        source: downloads
        target: /downloads
        volume:
          nocopy: true

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    networks:
      - media
    ports:
      - '8989:8989'
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
    volumes:
      # - {{ nas_path }}/config/sonarr:/config
      # - {{ nas_path }}/downloads:/downloads
      # - {{ nas_path }}/media/TV Shows:/tv
      - type: volume
        source: config_sonarr
        target: /config
        volume:
          nocopy: true
      - type: volume
        source: downloads
        target: /downloads
        volume:
          nocopy: true
      - type: volume
        source: media_tv
        target: /tv
        volume:
          nocopy: true

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    networks:
      - media
    ports:
      - '7878:7878'
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
    volumes:
      # - {{ nas_path }}/config/radarr:/config
      # - {{ nas_path }}/downloads:/downloads
      # - {{ nas_path }}/media/Movies:/movies
      - type: volume
        source: config_radarr
        target: /config
        volume:
          nocopy: true
      - type: volume
        source: downloads
        target: /downloads
        volume:
          nocopy: true
      - type: volume
        source: media_movies
        target: /movies
        volume:
          nocopy: true

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: always
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=America/New_York
      - UMASK_SET=<022>
    volumes:
#      - /media/${USER}/data1/downloads/ongoing:/downloads # download folder
#      - ${HOME}/.config/deluge:/config # config files
      - type: volume
        source: torrents
        target: /torrents
        volume:
          nocopy: true
      - type: volume
        source: downloads
        target: /downloads
        volume:
          nocopy: true
      - type: volume
        source: config_deluge
        target: /config
        volume:
          nocopy: true

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: always
    networks:
      - media
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=America/New_York
    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /media/${USER}/data1/downloads/ongoing/torrent-blackhole:/downloads # place where to put .torrent files
      - type: volume
        source: torrent_blackhole
        target: /downloads
        volume:
          nocopy: true
      - type: volume
        source: config_jackett
        target: /config
        volume:
          nocopy: true
  nginx:
    # build: ./nginx-lets-encrypt
    image: nginx:stable
    container_name: nginx
    restart: always
    networks:
      - media
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/container-log
      # - ./lets-encrypt-data/:/etc/letsencrypt/
    depends_on:
      - radarr
      - sonarr
      - jackett
      - nzbget
      - deluge

  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    restart: always
    networks:
      - media
    ports:
      - '32400:32400/tcp'
      - '3005:3005/tcp'
      - '8324:8324/tcp'
      - '32469:32469/tcp'
      - '1900:1900/udp'
      - '32410:32410/udp'
      - '32412:32412/udp'
      - '32413:32413/udp'
      - '32414:32414/udp'
    hostname: plex
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
      - PLEX_CLAIM="{{ plex_claim_token }}"
      - ADVERTISE_IP=http://{{ media_host_ip }}:32400/
      - CHANGE_CONFIG_DIR_OWNERSHIP=false
      - ALLOWED_NETWORKS={{ media_host_subnet }}
    volumes:
      - ./transcode:/transcode
      # - {{ nas_path }}/config/plex:/config
      # - {{ nas_path }}/media:/data
      - type: volume
        source: config_plex
        target: /config
        volume:
          nocopy: true
      - type: volume
        source: media
        target: /data
        volume:
          nocopy: true

volumes:
  config_sonarr:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/sonarr"
  config_radarr:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/radarr"
  config_deluge:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/deluge"
  config_jackett:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/jackett"
  config_nzbget:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/nzbget"
  config_plex:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/config/plex"
  torrents:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/downloads/ongoing"
  torrent_blackhole:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/downloads/ongoing/torrent-blackhole"
  downloads:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/downloads"
  media:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/Media"
  media_movies:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/Media/Movies"
  media_tv:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nas_host }},nolock,soft,rw
      device: ":/volume1/Media/TV Shows"
  # media_cifs:
  #   driver: local
  #   driver_opts:
  #     type: cifs
  #     o: vers=2.0,mfsymlinks,uid=1000,gid=1000,file_mode=0777,dir_mode=0777,username={{ nas_user }},password={{ nas_password }}
  #     device: "//{{ nas_host_ip }}/Media"

networks:
  media:
    name: media
    driver: bridge
